@model IEnumerable<TeamBuilderPkmnASP.Models.Pokemon>
@{
    ViewData["Title"] = "Pokemons list";
    Microsoft.Extensions.Primitives.StringValues searchValue ="";
    ViewData["verif"] = Url.ActionContext.HttpContext.Request.Query.TryGetValue("search",out searchValue);
}
<div class="row">
    <div class="col-md-5 offset-2"><h1>@ViewData["Title"]</h1></div>
    <div class="col-md-5">
        <form asp-controller="Pokemons" asp-action="Index" method="get">
            @{
                if ((bool)ViewData["verif"] && searchValue.ToArray()[0].ToString() != string.Empty)
                {
                    <input name="search" type="text" value="@searchValue.ToArray()[0].ToString()"/>
                }
                else
                {
                    <input name="search" type="text" placeholder="Search..."/>
                    

                }
            }

            <input type="submit" />
        </form> 
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Image)
            </th>
            <th>
                Nom
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (Pokemon item in Model)
        {
            <tr>
                <td>
                    <img src="@item.Image" alt="missing sprite"/>
                </td>
                <td>

                    <a asp-controller="Pokemons" asp-action="Details" asp-route-id="@item.Id">
                        @Html.DisplayFor(modelItem => item.Identifier)
                    </a>
                </td>
                @foreach (TeamBuilderPkmnASP.Models.Type type in item.Types)
                {
                    <td>
                        <img src="@type.Image" alt="@type.Name" width="75"/>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>
